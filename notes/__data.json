{"type":"data","nodes":[null,null,{"type":"data","data":[{"posts":1,"tags":21},[2,12],{"title":3,"date":4,"draft":5,"summary":6,"tags":7,"content":10,"slug":11},"Multi sort in Go","2023-12-13",false,"How does sorting on multiple fields work in Go?",[8,9],"go","multisort","\u003Ch1 data-svelte-h=\"svelte-1mq9y98\">Multisort in Go\u003C/h1> \u003Cp data-svelte-h=\"svelte-10gy28v\">While recently working on an piece of Go code I found myself wondering: how can you sort by multiple fields? Imagine you have a struct slice and you want to sort it based on multiple fields of the struct.\u003C/p> \u003Cp data-svelte-h=\"svelte-mam56q\">Hereâ€™s an example of a struct representing a simple bank account:\u003C/p> \u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">type\u003C/span> Account \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tAccountID    \u003Cspan class=\"token builtin\">int\u003C/span>\n\tBalance      \u003Cspan class=\"token builtin\">int\u003C/span>\n\tLastUpdated  \u003Cspan class=\"token builtin\">int\u003C/span>\n\tCreated      \u003Cspan class=\"token builtin\">int\u003C/span>\n\tTransactions \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token builtin\">int\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cp data-svelte-h=\"svelte-1a1fjft\">And a slice of the \u003Ccode>Account\u003C/code> struct:\u003C/p> \u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">var\u003C/span> accounts \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>Account\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cp data-svelte-h=\"svelte-7nlv1w\">We want to sort the \u003Ccode>accounts\u003C/code> slice by the Balance field and if Balance is the same then by AccountID.\u003C/p> \u003Cp data-svelte-h=\"svelte-1ugomnq\">Lets take a simple case first: sort all the accounts by their \u003Ccode>Balance\u003C/code> in decending order:\u003C/p> \u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">sort\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Slice\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>accounts\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>i\u003Cspan class=\"token punctuation\">,\u003C/span>j \u003Cspan class=\"token builtin\">int\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n  \u003Cspan class=\"token keyword\">return\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>i\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance \u003Cspan class=\"token operator\">>\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>j\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cp data-svelte-h=\"svelte-xvggn8\">Here the helper function returns true if the account at index \u003Ccode>i\u003C/code> in the slice has balance greater than account at index \u003Ccode>j\u003C/code>.\u003C/p> \u003Cp data-svelte-h=\"svelte-6kr7ee\">Now coming to the actual problem:\u003C/p> \u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">sort\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Slice\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>accounts\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>i\u003Cspan class=\"token punctuation\">,\u003C/span>j \u003Cspan class=\"token builtin\">int\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n  \u003Cspan class=\"token keyword\">if\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>i\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance \u003Cspan class=\"token operator\">==\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>j\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>i\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>AccountID \u003Cspan class=\"token operator\">>\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>j\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>AccountID\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>i\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance \u003Cspan class=\"token operator\">>\u003C/span> accounts\u003Cspan class=\"token punctuation\">[\u003C/span>j\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>Balance\n  \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre> \u003Cp data-svelte-h=\"svelte-1rtn04o\">Thats it! We start by setting up the helper function in a similar fashion but add an if condition: If the balances are same then sort (descending) by \u003Ccode>AccountId\u003C/code>. But if the balances are not the same then sort it as per previously - by \u003Ccode>Balance\u003C/code>.\u003C/p>","MultisortInGo",{"title":13,"date":14,"draft":5,"summary":15,"tags":16,"type":18,"content":19,"slug":20},"Hello world!","2023-12-01","Is this thing up?",[17],"foobar","post","\u003Ch1 data-svelte-h=\"svelte-dusks7\">Mic check\u003C/h1> \u003Cp data-svelte-h=\"svelte-5x024z\">If you are seeing this, my attempt to host this website worked. In which case, Hello!\u003C/p>","Helloworld",[8,9,17]],"uses":{}}]}
